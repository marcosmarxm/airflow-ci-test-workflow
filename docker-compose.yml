version: '3.6'

services:

  airflow:
      image: ${REPO}
      container_name: airflow
      volumes:
        - ./dags:/opt/airflow/dags
        - ./sql:/opt/airflow/sql
        - ./tests:/opt/airflow/tests
        - ./data:/opt/airflow/data
        - ./requirements.txt:/opt/airflow/requirements.txt
      environment: 
        - AIRFLOW_HOME=/opt/airflow
        - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}
        - AIRFLOW__CORE__EXECUTOR=${EXECUTOR}
        - AIRFLOW__API__AUTH_BACKEND=${AIRFLOW_API_BACKEND}
        - AIRFLOW__CORE__LOAD_EXAMPLES=false
        - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=false
      ports:
        - 8080:8080
      command: 'bash -c "pip3 install -r requirements.txt && airflow db init && airflow webserver -D && airflow scheduler -D"'

  source-db:
    image: postgres:11.4-alpine
    restart: always
    container_name: source-db
    ports:
      - 54320:54320
    volumes:
      - ./mnt/mock-db/table_init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=${SOURCE_USER}
      - POSTGRES_PASSWORD=${SOURCE_PASSWORD}
      - POSTGRES_DB=${SOURCE_DB}

  dest-db:
    image: postgres:11.4-alpine
    restart: always
    container_name: dest-db
    ports:
      - 54321:54321
    volumes:
      - ./mnt/mock-db/table_init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=${DEST_USER}
      - POSTGRES_PASSWORD=${DEST_PASSWORD}
      - POSTGRES_DB=${DEST_DB}
